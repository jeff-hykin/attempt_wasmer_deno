/* tslint:disable */
/* eslint-disable */
export function canonical_abi_realloc(a: number, b: number, c: number, d: number): number;
export function __wbg_intounderlyingsink_free(a: number): void;
export function intounderlyingsink_write(a: number, b: number): number;
export function intounderlyingsink_close(a: number): number;
export function intounderlyingsink_abort(a: number, b: number): number;
export function __wbg_intounderlyingbytesource_free(a: number): void;
export function intounderlyingbytesource_type(a: number, b: number): void;
export function intounderlyingbytesource_autoAllocateChunkSize(a: number): number;
export function intounderlyingbytesource_start(a: number, b: number): void;
export function intounderlyingbytesource_pull(a: number, b: number): number;
export function intounderlyingbytesource_cancel(a: number): void;
export function __wbg_intounderlyingsource_free(a: number): void;
export function intounderlyingsource_pull(a: number, b: number): number;
export function intounderlyingsource_cancel(a: number): void;
export function __wbg_trap_free(a: number): void;
export function trap___wbg_wasmer_trap(): void;
export function __wbg_instance_free(a: number): void;
export function __wbg_get_instance_stdin(a: number): number;
export function __wbg_get_instance_stdout(a: number): number;
export function __wbg_get_instance_stderr(a: number): number;
export function instance_wait(a: number): number;
export function runtime___getClassname(a: number, b: number): void;
export function __wbg_runtime_free(a: number): void;
export function runtime_js_new(a: number, b: number): void;
export function runtime_global(a: number, b: number): void;
export function directory___getClassname(a: number, b: number): void;
export function __wbg_directory_free(a: number): void;
export function directory_new(a: number, b: number): void;
export function directory_readDir(a: number, b: number, c: number): number;
export function directory_writeFile(a: number, b: number, c: number, d: number): number;
export function directory_readFile(a: number, b: number, c: number): number;
export function directory_readTextFile(a: number, b: number, c: number): number;
export function directory_createDir(a: number, b: number, c: number): number;
export function directory_removeDir(a: number, b: number, c: number): number;
export function directory_removeFile(a: number, b: number, c: number): number;
export function wat2wasm(a: number, b: number, c: number): void;
export function on_start(): void;
export function setWorkerUrl(a: number): void;
export function __wbg_deployedapp_free(a: number): void;
export function __wbg_get_deployedapp_id(a: number, b: number): void;
export function __wbg_set_deployedapp_id(a: number, b: number, c: number): void;
export function __wbg_get_deployedapp_created_at(a: number, b: number): void;
export function __wbg_set_deployedapp_created_at(a: number, b: number, c: number): void;
export function __wbg_get_deployedapp_version(a: number, b: number): void;
export function __wbg_set_deployedapp_version(a: number, b: number, c: number): void;
export function __wbg_get_deployedapp_description(a: number, b: number): void;
export function __wbg_set_deployedapp_description(a: number, b: number, c: number): void;
export function __wbg_get_deployedapp_yaml_config(a: number, b: number): void;
export function __wbg_set_deployedapp_yaml_config(a: number, b: number, c: number): void;
export function __wbg_get_deployedapp_user_yaml_config(a: number, b: number): void;
export function __wbg_set_deployedapp_user_yaml_config(a: number, b: number, c: number): void;
export function __wbg_get_deployedapp_config(a: number, b: number): void;
export function __wbg_set_deployedapp_config(a: number, b: number, c: number): void;
export function __wbg_get_deployedapp_json_config(a: number, b: number): void;
export function __wbg_set_deployedapp_json_config(a: number, b: number, c: number): void;
export function __wbg_get_deployedapp_url(a: number, b: number): void;
export function __wbg_set_deployedapp_url(a: number, b: number, c: number): void;
export function __wbg_get_deployedapp_app_id(a: number, b: number): void;
export function __wbg_set_deployedapp_app_id(a: number, b: number, c: number): void;
export function wasmer_deployApp(a: number): number;
export function wasmer_deleteApp(a: number): number;
export function __wbg_wasmerpackage_free(a: number): void;
export function __wbg_get_wasmerpackage_data(a: number, b: number): void;
export function __wbg_volume_free(a: number): void;
export function __wbg_atom_free(a: number): void;
export function __wbg_publishpackageoutput_free(a: number): void;
export function __wbg_get_publishpackageoutput_manifest(a: number): number;
export function __wbg_set_publishpackageoutput_manifest(a: number, b: number): void;
export function wasmer_createPackage(a: number): number;
export function wasmer_publishPackage(a: number): number;
export function __wbg_user_free(a: number): void;
export function wasmer_whoami(): number;
export function runWasix(a: number, b: number): number;
export function __wbg_threadpoolworker_free(a: number): void;
export function threadpoolworker_new(a: number): number;
export function threadpoolworker_handle(a: number, b: number): number;
export function initializeLogger(a: number, b: number, c: number): void;
export function writablestreamsink_close(a: number): number;
export function writablestreamsink_abort(a: number, b: number): void;
export function writablestreamsink_write(a: number, b: number): number;
export function __wbg_readablestreamsource_free(a: number): void;
export function readablestreamsource_pull(a: number, b: number): number;
export function readablestreamsource_cancel(a: number): void;
export function readablestreamsource_type(a: number): number;
export function wasmer___getClassname(a: number, b: number): void;
export function __wbg_wasmer_free(a: number): void;
export function __wbg_get_wasmer_entrypoint(a: number): number;
export function __wbg_set_wasmer_entrypoint(a: number, b: number): void;
export function __wbg_get_wasmer_commands(a: number): number;
export function __wbg_set_wasmer_commands(a: number, b: number): void;
export function __wbg_get_wasmer_pkg(a: number): number;
export function __wbg_set_wasmer_pkg(a: number, b: number): void;
export function userpackagedefinition___getClassname(a: number, b: number): void;
export function __wbg_userpackagedefinition_free(a: number): void;
export function __wbg_get_userpackagedefinition_hash(a: number, b: number): void;
export function __wbg_set_userpackagedefinition_hash(a: number, b: number, c: number): void;
export function wasmer_fromRegistry(a: number, b: number, c: number): number;
export function wasmer_fromFile(a: number, b: number): number;
export function wasmer_fromWasm(a: number, b: number, c: number): void;
export function __wbg_command_free(a: number): void;
export function __wbg_get_command_name(a: number): number;
export function __wbg_set_command_name(a: number, b: number): void;
export function command_run(a: number, b: number): number;
export function command_binary(a: number): number;
export function __wbg_get_wasmerpackage_manifest(a: number): number;
export function __wbg_writablestreamsink_free(a: number): void;
export function __wbg_set_wasmerpackage_data(a: number, b: number, c: number): void;
export function __wbg_set_publishpackageoutput_hash(a: number, b: number, c: number): void;
export function __wbg_set_user_id(a: number, b: number, c: number): void;
export function __wbg_set_wasmerpackage_manifest(a: number, b: number): void;
export function __wbg_set_user_username(a: number, b: number, c: number): void;
export function __wbg_get_publishpackageoutput_hash(a: number, b: number): void;
export function __wbg_get_user_id(a: number, b: number): void;
export function __wbg_get_user_username(a: number, b: number): void;
export function canonical_abi_free(a: number, b: number, c: number): void;
export const memory: WebAssembly.Memory;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_3: WebAssembly.Table;
export function _ZN136__LT_dyn_u20_core__ops__function__FnMut_LT__LP_A_C__RP__GT__u2b_Output_u20__u3d__u20_R_u20_as_u20_wasm_bindgen__closure__WasmClosure_GT_8describe6invoke17h312b1476c58c80d4E(a: number, b: number, c: number): void;
export function _ZN129__LT_dyn_u20_core__ops__function__Fn_LT__LP__RP__GT__u2b_Output_u20__u3d__u20_R_u20_as_u20_wasm_bindgen__closure__WasmClosure_GT_8describe6invoke17ha77455448910e942E(a: number, b: number): number;
export function _ZN133__LT_dyn_u20_core__ops__function__Fn_LT__LP_A_C__RP__GT__u2b_Output_u20__u3d__u20_R_u20_as_u20_wasm_bindgen__closure__WasmClosure_GT_8describe6invoke17hc81cccb7863638f7E(a: number, b: number, c: number): number;
export function __wbindgen_exn_store(a: number): void;
export function _ZN12wasm_bindgen7convert8closures11invoke2_mut17h3c6428028aee8d8cE(a: number, b: number, c: number, d: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_thread_destroy(a: number, b: number): void;
export function __wbindgen_start(): void;
